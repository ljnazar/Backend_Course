paths:
  /api/products:
    get:
      tags:
        - products
      summary: get products
      description: obtains products required with query params (query, limit, sort, page)
      operationId: getProducts
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: false
          description: Category of product
        - in: query
          name: limit
          schema:
            type: string
          required: false
          description: Quantity of products to get 
        - in: query
          name: sort
          schema:
            type: string
          required: false
          description: Products order
        - in: query
          name: page
          schema:
            type: string
          required: false
          description: Current page
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#components/schemas/paginateResponse'
        '404':
          description: Not found
        '500':
          description: Internal server error
    post:
      tags:
        - products
      summary: create product
      description: create product in mongoDB
      operationId: createProduct
      requestBody:
        description: Create a new product in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
        required: true
      responses:
          '200':
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: '#components/schemas/product'
          '404':
            description: Not found
          '405':
            description: Invalid input
          '500':
            description: Internal server error
  /api/products{pid}:
    put:
      tags:
        - products
      summary: Update an existing product
      description: Update an existing product by Id
      operationId: updateProduct
      parameters:
        - in: path
          name: pid
          schema:
            type: string
          required: true
          description: Id of product
      requestBody:
        description: Update an existent product in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Not found
        '405':
          description: Validation exception
        '500':
          description: Internal server error
    delete:
      tags:
        - products
      summary: delete an existing product
      description: delete an existing product by Id
      operationId: deleteProduct
      parameters:
        - in: path
          name: pid
          schema:
            type: string
          required: true
          description: Id of product
      responses:
        '200':
          description: Successful operation        
        '400':
          description: Invalid ID supplied
        '404':
          description: Not found
        '405':
          description: Validation exception
        '500':
          description: Internal server error

components:
  schemas:
    paginateResponse:
      type: object
      properties:
        status: 
          type: number
          description: Status code
        payload: 
          type: array
          description: Products
        totalResults:
          type: number
          description: Number of products
        totalPages: 
          type: number
          description: Number of pages
        prevPage:
          type: number
          description: Number of page
        nextPage:
          type: number
          description: Number of page
        page:
          type: number
          description: Current pages
        hasPrevPage:
          type: boolean
          description: page exists
        hasNextPage:
          type: boolean
          description: page exists
        prevLink: 
          type: string
          description: Link to previous page
        nextLink: 
          type: string
          description: Link to next page
    product:
      type: object
      properties:
        _id:
          type: objectId
          description: Id mongoDB
        title:
          type: string
          description: Title of the product
        description:
          type: string
          description: description of the product
        category:
          type: string
          description: Category of the product
        price:
          type: string
          description: Price of the product
        thumbnail:
          type: string
          description: Link to image
        code:
          type: string
          description: Code of the product
        stock:
          type: number
          description: Stock of the product
